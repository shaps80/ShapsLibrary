<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SLCoreDataManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SLCoreDataManager</TokenIdentifier>
			<Abstract type="html">This class encapsulates a lot of CoreData functionality to allow for easier implementation and management.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLCoreDataManager/initializeWithDatabaseName:modelName:</TokenIdentifier>
			<Abstract type="html">Default initializer, loads the data model.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>+ (void)initializeWithDatabaseName:(NSString *)databaseName modelName:(NSString *)modelName</Declaration>
			<Parameters>
				<Parameter>
					<Name>databaseName</Name>
					<Abstract type="html">The name used to store the SQLite database.</Abstract>
				</Parameter><Parameter>
					<Name>modelName</Name>
					<Abstract type="html">The name used to load the model from the main bundle.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initializeWithDatabaseName:modelName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLCoreDataManager/sharedInstance</TokenIdentifier>
			<Abstract type="html">Returns a singleton instance.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>+ (SLCoreDataManager *)sharedInstance</Declaration>
			
			
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/initWithDatabaseName:modelName:</TokenIdentifier>
			<Abstract type="html">Designated initializer.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (id)initWithDatabaseName:(NSString *)databaseName modelName:(NSString *)modelName</Declaration>
			<Parameters>
				<Parameter>
					<Name>databaseName</Name>
					<Abstract type="html">The name to use for the database. This is primarily used to name the file on disk.</Abstract>
				</Parameter><Parameter>
					<Name>modelName</Name>
					<Abstract type="html">The name to use for the model, this will load from the main bundle a model with this name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithDatabaseName:modelName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/masterManagedObjectContext</TokenIdentifier>
			<Abstract type="html">The master managed object context.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSManagedObjectContext *)masterManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/masterManagedObjectContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/backgroundManagedObjectContext</TokenIdentifier>
			<Abstract type="html">The background managed object context.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSManagedObjectContext *)backgroundManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/backgroundManagedObjectContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/newManagedObjectContext</TokenIdentifier>
			<Abstract type="html">The master managed object context.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSManagedObjectContext *)newManagedObjectContext</Declaration>
			
			
			<Anchor>//api/name/newManagedObjectContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/saveMasterContext</TokenIdentifier>
			<Abstract type="html">Convenience method for saving the master managed object context.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (void)saveMasterContext</Declaration>
			
			
			<Anchor>//api/name/saveMasterContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/saveBackgroundContext</TokenIdentifier>
			<Abstract type="html">Convenience method for saving the background managed object context.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (void)saveBackgroundContext</Declaration>
			
			
			<Anchor>//api/name/saveBackgroundContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/saveNewContext</TokenIdentifier>
			<Abstract type="html">Convenience method for saving the managed object context used when creating new records.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (void)saveNewContext</Declaration>
			
			
			<Anchor>//api/name/saveNewContext</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLCoreDataManager/setIdentifierKey:forEntityName:</TokenIdentifier>
			<Abstract type="html">Sets the primary key identifier for the specified entity with the given name. This is useful when integrating with a server-based API and a unique identifier needs to be persisted across platforms.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>+ (void)setIdentifierKey:(NSString *)key forEntityName:(NSString *)entityName</Declaration>
			<Parameters>
				<Parameter>
					<Name>key</Name>
					<Abstract type="html">The string for the key in the database to use.</Abstract>
				</Parameter><Parameter>
					<Name>entityName</Name>
					<Abstract type="html">The name of the entity in the database to use.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIdentifierKey:forEntityName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLCoreDataManager/identifierKeyForEntityName:</TokenIdentifier>
			<Abstract type="html">Gets the identifier key for a given entityName.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)identifierKeyForEntityName:(NSString *)entityName</Declaration>
			<Parameters>
				<Parameter>
					<Name>entityName</Name>
					<Abstract type="html">The entity name in the database.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The identifier for this entity.</Abstract></ReturnValue>
			<Anchor>//api/name/identifierKeyForEntityName:</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/applicationDocumentsDirectory</TokenIdentifier>
			<Abstract type="html">Returns the applications shared documents directory.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSURL *)applicationDocumentsDirectory</Declaration>
			
			
			<Anchor>//api/name/applicationDocumentsDirectory</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/managedObjectModel</TokenIdentifier>
			<Abstract type="html">The managed object model.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSManagedObjectModel *)managedObjectModel</Declaration>
			
			
			<Anchor>//api/name/managedObjectModel</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLCoreDataManager/persistentStoreCoordinator</TokenIdentifier>
			<Abstract type="html">The persistent store coordinator.</Abstract>
			<DeclaredIn>SLCoreDataManager.h</DeclaredIn>			
			
			<Declaration>- (NSPersistentStoreCoordinator *)persistentStoreCoordinator</Declaration>
			
			
			<Anchor>//api/name/persistentStoreCoordinator</Anchor>
            <NodeRef refid="5"/>
		</Token>
		
	</File>
</Tokens>