<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SLAbstractLogger.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SLAbstractLogger</TokenIdentifier>
			<Abstract type="html">The SLLogger protocol specifies that an optional formatter can be added to a logger.
Most (but not all) loggers will want to support formatters.</Abstract>
			<DeclaredIn>SLLog.h</DeclaredIn>
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLAbstractLogger/logFormatter</TokenIdentifier>
			<Abstract type="html">Formatters may optionally be added to any logger.</Abstract>
			<DeclaredIn>SLLog.h</DeclaredIn>			
			
			<Declaration>- (id&lt;SLLogFormatter&gt;)logFormatter</Declaration>
			
			
			<Anchor>//api/name/logFormatter</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLAbstractLogger/loggerQueue</TokenIdentifier>
			<Abstract type="html">Each logger is executed concurrently with respect to the other loggers.
Thus, a dedicated dispatch queue is used for each logger.
Logger implementations may optionally choose to provide their own dispatch queue.</Abstract>
			<DeclaredIn>SLLog.m</DeclaredIn>			
			
			<Declaration>- (dispatch_queue_t)loggerQueue</Declaration>
			
			
			<Anchor>//api/name/loggerQueue</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLAbstractLogger/loggerName</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SLLog.m</DeclaredIn>			
			
			<Declaration>- (NSString *)loggerName</Declaration>
			
			
			<Anchor>//api/name/loggerName</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
	</File>
</Tokens>