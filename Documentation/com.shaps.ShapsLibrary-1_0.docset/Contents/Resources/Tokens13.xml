<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SLTTYLogger.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SLTTYLogger</TokenIdentifier>
			<Abstract type="html">Welcome to Cocoa Lumberjack!</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>
			
			<NodeRef refid="13"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/setColorsEnabled:</TokenIdentifier>
			<Abstract type="html">Want to use different colors for different log levels?
Enable this property.</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, assign) BOOL colorsEnabled</Declaration>
			
			
			<Anchor>//api/name/colorsEnabled</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/colorsEnabled</TokenIdentifier>
			<Abstract type="html">Want to use different colors for different log levels?
Enable this property.</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, assign) BOOL colorsEnabled</Declaration>
			
			
			<Anchor>//api/name/colorsEnabled</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SLTTYLogger/colorsEnabled</TokenIdentifier>
			<Abstract type="html">Want to use different colors for different log levels?
Enable this property.</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, assign) BOOL colorsEnabled</Declaration>
			
			
			<Anchor>//api/name/colorsEnabled</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/setForegroundColor:backgroundColor:forFlag:</TokenIdentifier>
			<Abstract type="html">The default color set (foregroundColor, backgroundColor) is:</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>- (void)setForegroundColor:(UIColor *)txtColor backgroundColor:(UIColor *)bgColor forFlag:(int)mask</Declaration>
			
			
			<Anchor>//api/name/setForegroundColor:backgroundColor:forFlag:</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/setForegroundColor:backgroundColor:forFlag:context:</TokenIdentifier>
			<Abstract type="html">Just like setForegroundColor:backgroundColor:flag, but allows you to specify a particular logging context.</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>- (void)setForegroundColor:(UIColor *)txtColor backgroundColor:(UIColor *)bgColor forFlag:(int)mask context:(int)ctxt</Declaration>
			
			
			<Anchor>//api/name/setForegroundColor:backgroundColor:forFlag:context:</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/setForegroundColor:backgroundColor:forTag:</TokenIdentifier>
			<Abstract type="html">Similar to the methods above, but allows you to map SLLogMessage-&gt;tag to a particular color profile.
For example, you could do something like this:</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>- (void)setForegroundColor:(UIColor *)txtColor backgroundColor:(UIColor *)bgColor forTag:(id&lt;NSCopying&gt;)tag</Declaration>
			
			
			<Anchor>//api/name/setForegroundColor:backgroundColor:forTag:</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/clearColorsForFlag:</TokenIdentifier>
			<Abstract type="html">Clearing color profiles.</Abstract>
			<DeclaredIn>SLTTYLogger.h</DeclaredIn>			
			
			<Declaration>- (void)clearColorsForFlag:(int)mask</Declaration>
			
			
			<Anchor>//api/name/clearColorsForFlag:</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLTTYLogger/initialize_colors_16</TokenIdentifier>
			<Abstract type="html">Initializes the colors array, as well as the codesfg and codesbg arrays, for 16 color mode.</Abstract>
			<DeclaredIn>SLTTYLogger.m</DeclaredIn>			
			
			<Declaration>+ (void)initialize_colors_16</Declaration>
			
			
			<Anchor>//api/name/initialize_colors_16</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLTTYLogger/initialize_colors_256</TokenIdentifier>
			<Abstract type="html">Initializes the colors array, as well as the codesfg and codesbg arrays, for 256 color mode.</Abstract>
			<DeclaredIn>SLTTYLogger.m</DeclaredIn>			
			
			<Declaration>+ (void)initialize_colors_256</Declaration>
			
			
			<Anchor>//api/name/initialize_colors_256</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLTTYLogger/codeIndexForColor:</TokenIdentifier>
			<Abstract type="html">Maps the given color to the closest available color supported by the shell.
The shell may support 256 colors, or only 16.</Abstract>
			<DeclaredIn>SLTTYLogger.m</DeclaredIn>			
			
			<Declaration>+ (NSUInteger)codeIndexForColor:(OSColor *)inColor</Declaration>
			
			
			<Anchor>//api/name/codeIndexForColor:</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SLTTYLogger/initialize</TokenIdentifier>
			<Abstract type="html">The runtime sends initialize to each class in a program exactly one time just before the class,
or any class that inherits from it, is sent its first message from within the program. (Thus the
method may never be invoked if the class is not used.) The runtime sends the initialize message to
classes in a thread-safe manner. Superclasses receive this message before their subclasses.</Abstract>
			<DeclaredIn>SLTTYLogger.m</DeclaredIn>			
			
			<Declaration>+ (void)initialize</Declaration>
			
			
			<Anchor>//api/name/initialize</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SLTTYLogger/loggerName</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SLTTYLogger.m</DeclaredIn>			
			
			<Declaration>- (NSString *)loggerName</Declaration>
			
			
			<Anchor>//api/name/loggerName</Anchor>
            <NodeRef refid="13"/>
		</Token>
		
	</File>
</Tokens>